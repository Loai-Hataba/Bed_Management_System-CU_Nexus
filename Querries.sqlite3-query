-- database: ./RFID.db
--                                  Schema

PRAGMA foreign_keys = ON;


CREATE TABLE "Patients"(
    UID TEXT PRIMARY KEY UNIQUE,
    Name TEXT,
    Phone TEXT,
    Age INTEGER NOT NULL,
    Sex TEXT,
    BloodType TEXT NOT NULL,
    Admission_reason TEXT,
    Family_history_disease TEXT,
    Diagnosis TEXT,
    Expected_Recovery TEXT
);

CREATE TABLE "PatientMedication"(
    patient_id TEXT REFERENCES Patients(UID),
    medicine_id INTEGER REFERENCES Medications(medicine_id),
    current_medication Boolean,
    PRIMARY KEY (patient_id, medicine_id)
);

CREATE TABLE Medications(
    medicine_id INTEGER PRIMARY KEY AUTOINCREMENT,
    medicine_name TEXT,
    available Boolean
);


CREATE TABLE "Beds"(
    Bed_id INTEGER PRIMARY KEY AUTOINCREMENT,
    Room_id INTEGER NOT NULL
);


---------------------------------------------------------------------
--                                  NEW

CREATE TABLE Admissions (
  admission_id INTEGER PRIMARY KEY AUTOINCREMENT,
  patient_id TEXT NOT NULL REFERENCES Patients(UID),
  bed_id INTEGER REFERENCES Beds(Bed_id),
  admission_date TEXT NOT NULL,            -- ISO datetime e.g. '2025-09-29 14:30:00'
  discharge_date TEXT,                     -- NULL while admitted
  admission_reason TEXT,
  diagnosis TEXT,
  status TEXT CHECK(status IN ('admitted','discharged','transferred','expired')) DEFAULT 'admitted',
  primary_surgeon TEXT,
  preop_done INTEGER DEFAULT 0             -- 0/1 boolean
);
CREATE INDEX idx_admissions_patient ON Admissions(patient_id);
CREATE INDEX idx_admissions_dates ON Admissions(admission_date, discharge_date);


CREATE TABLE DiagnosisCodes (
  code TEXT PRIMARY KEY,
  description TEXT
);

CREATE TABLE InvestigationTypes (
  type_id INTEGER PRIMARY KEY AUTOINCREMENT,
  code TEXT UNIQUE,
  name TEXT,
  category TEXT    -- e.g., 'lab','imaging','scale','cardiac'
);

CREATE TABLE ImagingTypes (
  imaging_type_id INTEGER PRIMARY KEY AUTOINCREMENT,
  code TEXT UNIQUE,
  name TEXT
);

CREATE TABLE Investigations(
  investigation_id INTEGER PRIMARY KEY AUTOINCREMENT,
  admission_id INTEGER REFERENCES Admissions(admission_id),
  patient_id TEXT NOT NULL REFERENCES Patients(UID),
  type_id INTEGER REFERENCES InvestigationTypes(type_id),
  result_text TEXT,         -- raw text or description
  result_value REAL,        -- numeric if applicable
  unit TEXT,
  abnormal INTEGER DEFAULT 0,  -- 0/1
  date TEXT DEFAULT (datetime('now', '+3 hours'))
);
CREATE INDEX idx_investigations_patient ON Investigations(patient_id);
CREATE INDEX idx_investigations_admission ON Investigations(admission_id);

CREATE TABLE LabResults (
  lab_id INTEGER PRIMARY KEY AUTOINCREMENT,
  admission_id INTEGER REFERENCES Admissions(admission_id),
  patient_id TEXT NOT NULL REFERENCES Patients(UID),
  test_name TEXT,           -- e.g., 'Sodium', 'Creatinine'
  test_code TEXT,           -- use standardized codes if you want
  value REAL,
  unit TEXT,
  normal_low REAL,
  normal_high REAL,
  abnormal INTEGER DEFAULT 0,
  date TEXT DEFAULT (datetime('now'))
);
CREATE INDEX idx_labresults_patient ON LabResults(patient_id);
CREATE INDEX idx_labresults_admission_test ON LabResults(admission_id, test_name);
CREATE INDEX idx_labresults_test_admission ON LabResults(test_name, admission_id);
CREATE INDEX idx_investigations_type ON Investigations(type_id);


CREATE TABLE NeurologicalScales (
  scale_id INTEGER PRIMARY KEY AUTOINCREMENT,
  admission_id INTEGER REFERENCES Admissions(admission_id),
  patient_id TEXT NOT NULL REFERENCES Patients(UID),
  gcs_eye INTEGER,
  gcs_verbal INTEGER,
  gcs_motor INTEGER,
  gcs_total INTEGER,
  wfns_grade INTEGER,
  -- STOP-BANG components (0/1)
  stop_snore INTEGER,
  stop_tired INTEGER,
  stop_observed INTEGER,
  stop_bp INTEGER,
  stop_bmi INTEGER,
  stop_age INTEGER,
  stop_neck INTEGER,
  stop_gender INTEGER,
  stopbang_score INTEGER,
  date TEXT DEFAULT (datetime('now', '+3 hours'))
);
CREATE INDEX idx_scales_admission ON NeurologicalScales(admission_id);


CREATE TABLE Comorbidities (
  patient_id TEXT REFERENCES Patients(UID),
  admission_id INTEGER REFERENCES Admissions(admission_id),
  comorbidity TEXT,         -- e.g., 'hypertension','diabetes','heart_failure'
  present INTEGER DEFAULT 0,
  PRIMARY KEY (patient_id, admission_id, comorbidity)
);
CREATE INDEX idx_comorbidity_patient ON Comorbidities(patient_id);



CREATE TABLE RiskFactors (
  factor_id INTEGER PRIMARY KEY AUTOINCREMENT,
  admission_id INTEGER REFERENCES Admissions(admission_id),
  patient_id TEXT NOT NULL REFERENCES Patients(UID),
  bmi REAL,
  neck_circumference REAL,
  smoker INTEGER DEFAULT 0,
  pregnancy INTEGER DEFAULT 0,
  allergy_contrast INTEGER DEFAULT 0,
  airway_difficulty INTEGER DEFAULT 0,
  date TEXT DEFAULT (datetime('now'))
);



CREATE TABLE PreoperativeChecklist (
  checklist_id INTEGER PRIMARY KEY AUTOINCREMENT,
  admission_id INTEGER REFERENCES Admissions(admission_id),
  patient_id TEXT NOT NULL REFERENCES Patients(UID),
  bp_systolic INTEGER,
  bp_diastolic INTEGER,
  ecg_abnormal INTEGER DEFAULT 0,
  airway_assessment TEXT,     -- 'easy','difficult','unknown'
  pregnancy_test INTEGER DEFAULT 0,
  coag_pt REAL,
  coag_inr REAL,
  coag_aptt REAL,
  blood_sugar REAL,
  date TEXT DEFAULT (datetime('now'))
);



CREATE TABLE PatientFeatures (
  feature_id INTEGER PRIMARY KEY AUTOINCREMENT,
  admission_id INTEGER REFERENCES Admissions(admission_id),
  patient_id TEXT REFERENCES Patients(UID),

  -- core demographics
  age INTEGER,
  sex TEXT,
  bmi REAL,
  blood_type TEXT,

  -- neuro scales
  gcs_total INTEGER,
  wfns_grade INTEGER,
  stopbang_score INTEGER,

  -- important labs (store last preop value)
  sodium REAL,
  potassium REAL,
  creatinine REAL,
  gfr REAL,
  alt REAL,
  ast REAL,
  bilirubin REAL,
  hemoglobin REAL,
  wbc REAL,
  platelets REAL,
  blood_sugar REAL,

  -- counts and flags
  num_medications INTEGER,
  num_investigations INTEGER,
  comorbidity_count INTEGER,

  -- synthetic / derived
  severity_score INTEGER,        -- you can compute as weighted sum
  admission_date TEXT,
  discharge_date TEXT,
  recovery_days INTEGER,         -- label: julianday(discharge) - julianday(admission)
  
  -- predictions
  predicted_recovery_days INTEGER,
  prediction_timestamp TEXT,
  model_version TEXT,
  prediction_confidence REAL,

  created_at TEXT DEFAULT (datetime('now'))
);
CREATE INDEX idx_features_admission ON PatientFeatures(admission_id);
CREATE INDEX idx_features_patient ON PatientFeatures(patient_id);



CREATE TABLE Predictions (
  prediction_id INTEGER PRIMARY KEY AUTOINCREMENT,
  admission_id INTEGER REFERENCES Admissions(admission_id),
  patient_id TEXT REFERENCES Patients(UID),
  predicted_recovery_days INTEGER,
  predicted_discharge_date TEXT,
  model_version TEXT,
  confidence REAL,
  created_at TEXT DEFAULT (datetime('now'))
);
CREATE INDEX idx_predictions_patient ON Predictions(patient_id);


-----------------------------------------------------------------------------------
--                                  Inserts

INSERT INTO Patients (UID, Name, Phone, Age, Sex, BloodType, Admission_reason, Family_history_disease, Diagnosis, Expected_Recovery) VALUES
('P001', 'Ahmed Mahmoud', '01012345678', 34, 'M', 'A+', 'Leg fracture', 'None', 'Internal fixation with plates and screws', '2025-11-08'),
('P002', 'Mona Abdallah', '01187654321', 27, 'F', 'O-', 'Pneumonia', 'Asthma in family', 'Moderate pneumonia', '2025-10-07'),
('P003', 'Youssef Ali', '01211223344', 45, 'M', 'B+', 'Chest pain', 'Hypertension in family', 'Stable angina', '2025-10-18'),
('P004', 'Fatma Hassan', '01599887766', 30, 'F', 'AB+', 'High fever', 'None', 'Viral infection', '2025-10-04'),
('P005', 'Mohamed Ibrahim', '01055667788', 52, 'M', 'O+', 'Severe headache', 'Diabetes in family', 'High blood pressure', '2025-10-11'),
('P006', 'Sara Ali', '01133445566', 19, 'F', 'A-', 'Abdominal pain', 'Stomach ulcer in family', 'Appendicitis', '2025-10-04'),
('P007', 'Khaled Mostafa', '01266778899', 38, 'M', 'B-', 'Shoulder injury', 'None', 'Dislocated shoulder', '2025-10-25'),
('P008', 'Laila Ahmed', '01044556677', 29, 'F', 'A+', 'General fatigue', 'Anemia in family', 'Moderate anemia', '2025-10-27'),
('P009', 'Amr Hassan', '01522113344', 41, 'M', 'O+', 'Back pain', 'Disc herniation in family', 'Herniated disc', '2025-11-08'),
('P010', 'Noha Mohamed', '01177889900', 36, 'F', 'AB-', 'Sore throat', 'Seasonal allergies in family', 'Tonsillitis', '2025-10-02');


INSERT INTO Medications (Medicine_name, Available)
VALUES
    ('Paracetamol', 1),     -- pain relief, fever
    ('Ibuprofen', 1),       -- anti-inflammatory
    ('Amoxicillin', 1),     -- antibiotic
    ('Ciprofloxacin', 0),   -- antibiotic, not available
    ('Metformin', 1),       -- diabetes
    ('Atorvastatin', 1),    -- cholesterol
    ('Omeprazole', 1),      -- acid reflux
    ('Losartan', 0),        -- blood pressure, out of stock
    ('Aspirin', 1),         -- blood thinner, pain relief
    ('Salbutamol', 1);      -- inhaler for asthma

INSERT INTO InvestigationTypes (code, name, category) VALUES
('SODIUM','Sodium (Na)','lab'),
('POTASSIUM','Potassium (K)','lab'),
('CREATININE','Creatinine','lab'),
('GFR','GFR','lab'),
('ALT','ALT (SGPT)','lab'),
('AST','AST (SGOT)','lab'),
('BILIRUBIN','Bilirubin','lab'),
('HEMOGLOBIN','Hemoglobin','lab'),
('WBC','White blood cells','lab'),
('PLATELETS','Platelets','lab'),
('BLOOD_SUGAR','Blood Glucose','lab'),
('PT','Prothrombin Time','lab'),
('INR','INR','lab'),
('APTT','aPTT','lab'),
('ECG','Electrocardiogram','cardiac'),
('CT_BRAIN','CT Brain','imaging'),
('MRI_BRAIN','MRI Brain','imaging'),
('ANGIO','Angiography','imaging'),
('EEG','EEG','imaging'),
('GCS','Glasgow Coma Scale','scale'),
('WFNS','WFNS grade','scale'),
('STOPBANG','STOP-BANG score','scale');

INSERT INTO Beds (Bed_id, Room_id) VALUES
    ('1', '1'),
    ('2', '1'),
    ('3', '1'),
    ('4', '1'),
    ('5', '1'),
    ('6', '1'),
    ('7', '2'),
    ('8', '2'),
    ('9', '2'),
    ('10', '2'),
    ('11', '2'),
    ('12', '2'),
    ('13', '2');



-- create admission (replace Bed_id with the bed created above; if last bed id = 1)
INSERT INTO Admissions (patient_id, bed_id, admission_date, discharge_date, admission_reason, diagnosis, status, primary_surgeon, preop_done)
VALUES ('P001', 1, datetime('now','-10 days', '+3 hours'), datetime('now', '+3 hours'), 'Stroke', 'Ischemic stroke', 'discharged', 'Dr. Smith', 1);

UPDATE sqlite_sequence SET seq = 0 WHERE name = 'Admissions'; -- reset autoincrement

DELETE FROM Admissions;


INSERT INTO LabResults (admission_id, patient_id, test_name, test_code, value, unit, date)
VALUES
(1, 'P001', 'Sodium', 'SODIUM', 140, 'mEq/L', datetime('now','-9 days', '+3 hours')),
(1, 'P001', 'Creatinine', 'CREATININE', 1.1, 'mg/dL', datetime('now','-9 days', '+3 hours')),
(1, 'P001', 'Hemoglobin', 'HEMOGLOBIN', 13.5, 'g/dL', datetime('now','-9 days', '+3 hours')),
(1, 'P001', 'Blood_Sugar', 'BLOOD_SUGAR', 110, 'mg/dL', datetime('now','-9 days', '+3 hours'));


INSERT INTO NeurologicalScales (admission_id, patient_id, gcs_eye, gcs_verbal, gcs_motor, gcs_total, wfns_grade, stopbang_score, date)
VALUES (1, 'P001', 4, 4, 5, 13, 2, 2, datetime('now','-9 days'));






INSERT INTO PatientFeatures (
  admission_id, patient_id, age, sex, bmi, blood_type,
  gcs_total, wfns_grade, stopbang_score,
  sodium, potassium, creatinine, gfr, alt, ast, bilirubin,
  hemoglobin, wbc, platelets, blood_sugar,
  num_medications, num_investigations, comorbidity_count,
  severity_score, admission_date, discharge_date, recovery_days, created_at
)
SELECT
  a.admission_id,
  a.patient_id,
  p.Age,
  p.Sex,
  (SELECT rf.bmi FROM RiskFactors rf WHERE rf.admission_id = a.admission_id ORDER BY rf.date DESC LIMIT 1) AS bmi,
  p.BloodType,
  (SELECT ns.gcs_total FROM NeurologicalScales ns WHERE ns.admission_id = a.admission_id ORDER BY ns.date DESC LIMIT 1) AS gcs_total,
  (SELECT ns.wfns_grade FROM NeurologicalScales ns WHERE ns.admission_id = a.admission_id ORDER BY ns.date DESC LIMIT 1) AS wfns_grade,
  (SELECT ns.stopbang_score FROM NeurologicalScales ns WHERE ns.admission_id = a.admission_id ORDER BY ns.date DESC LIMIT 1) AS stopbang_score,
  (SELECT lr.value FROM LabResults lr WHERE lr.admission_id = a.admission_id AND lr.test_name='Sodium' ORDER BY lr.date DESC LIMIT 1) AS sodium,
  (SELECT lr.value FROM LabResults lr WHERE lr.admission_id = a.admission_id AND lr.test_name='Potassium' ORDER BY lr.date DESC LIMIT 1) AS potassium,
  (SELECT lr.value FROM LabResults lr WHERE lr.admission_id = a.admission_id AND lr.test_name='Creatinine' ORDER BY lr.date DESC LIMIT 1) AS creatinine,
  (SELECT lr.value FROM LabResults lr WHERE lr.admission_id = a.admission_id AND lr.test_code='GFR' ORDER BY lr.date DESC LIMIT 1) AS gfr,
  (SELECT lr.value FROM LabResults lr WHERE lr.admission_id = a.admission_id AND lr.test_name='ALT' ORDER BY lr.date DESC LIMIT 1) AS alt,
  (SELECT lr.value FROM LabResults lr WHERE lr.admission_id = a.admission_id AND lr.test_name='AST' ORDER BY lr.date DESC LIMIT 1) AS ast,
  (SELECT lr.value FROM LabResults lr WHERE lr.admission_id = a.admission_id AND lr.test_name='Bilirubin' ORDER BY lr.date DESC LIMIT 1) AS bilirubin,
  (SELECT lr.value FROM LabResults lr WHERE lr.admission_id = a.admission_id AND lr.test_name='Hemoglobin' ORDER BY lr.date DESC LIMIT 1) AS hemoglobin,
  (SELECT lr.value FROM LabResults lr WHERE lr.admission_id = a.admission_id AND lr.test_name='WBC' ORDER BY lr.date DESC LIMIT 1) AS wbc,
  (SELECT lr.value FROM LabResults lr WHERE lr.admission_id = a.admission_id AND lr.test_name='Platelets' ORDER BY lr.date DESC LIMIT 1) AS platelets,
  (SELECT lr.value FROM LabResults lr WHERE lr.admission_id = a.admission_id AND lr.test_name='Blood_Sugar' ORDER BY lr.date DESC LIMIT 1) AS blood_sugar,
  (SELECT COUNT(*) FROM PatientMedication pm WHERE pm.patient_id = a.patient_id AND pm.current_medication = 1) AS num_medications,
  (SELECT COUNT(*) FROM Investigations inv WHERE inv.admission_id = a.admission_id) AS num_investigations,
  (SELECT COUNT(*) FROM Comorbidities c WHERE c.admission_id = a.admission_id AND c.present = 1) AS comorbidity_count,
  NULL AS severity_score,
  a.admission_date,
  a.discharge_date,
  CAST(julianday(a.discharge_date) - julianday(a.admission_date) AS INTEGER) AS recovery_days,
  datetime('now')
FROM Admissions a
JOIN Patients p ON p.UID = a.patient_id
WHERE a.discharge_date IS NOT NULL
  AND NOT EXISTS (SELECT 1 FROM PatientFeatures pf WHERE pf.admission_id = a.admission_id);